<launch>
  <arg name="MQTT_HOST" default="$(env MQTT_HOST)"/>
  <arg name="MQTT_PORT" default="$(env MQTT_PORT)"/>
  <arg name="MQTT_USERNAME" default="$(env MQTT_USERNAME)"/>
  <arg name="MQTT_PASSWORD" default="$(env MQTT_PASSWORD)"/>
  <arg name="MQTT_USE_CA" default="$(env MQTT_USE_CA)"/>
  <arg name="ENTITY_TYPE" default="$(env ENTITY_TYPE)"/>
  <arg name="ENTITY_ID1" default="$(env ENTITY_ID1)"/>
  <arg name="ENTITY_ID2" default="$(env ENTITY_ID2)"/>
  <arg name="CMD_NAME" default="$(env CMD_NAME)"/>
  <arg name="EMG_NAME" default="$(env EMG_NAME)"/>
  <arg name="ROBOT_NAME1" default="$(env ROBOT_NAME1)"/>
  <arg name="TIMEZONE" default="Asia/Tokyo"/>
  <arg name="SEND_DELTA_MILLISEC" default="1000"/>

  <node name="robot_command1" pkg="uoa_poc2_bridge" type="robot_command.py" output="screen">
    <rosparam command="delete" param=""/>
    <param name="timezone" value="$(arg TIMEZONE)"/>
    <param name="mqtt/host" value="$(arg MQTT_HOST)"/>
    <param name="mqtt/port" value="$(arg MQTT_PORT)"/>
    <param name="mqtt/username" value="$(arg MQTT_USERNAME)"/>
    <param name="mqtt/password" value="$(arg MQTT_PASSWORD)"/>
    <param name="mqtt/use_ca" value="$(arg MQTT_USE_CA)"/>
    <param name="mqtt/cafile" value="$(find uoa_poc2_bridge)/certs/DST_Root_CA_X3.pem"/>
    <param name="roboticbase/entity_type" value="$(arg ENTITY_TYPE)"/>
    <param name="roboticbase/entity_id" value="$(arg ENTITY_ID1)"/>
    <param name="roboticbase/cmd_name" value="$(arg CMD_NAME)"/>
    <param name="ros/topic/cmd" value="/robot_bridge/$(arg ROBOT_NAME1)/cmd"/>
    <param name="ros/topic/cmdexe" value="/robot_bridge/$(arg ROBOT_NAME1)/cmdexe"/>
  </node>

  <node name="robot_command2" pkg="uoa_poc2_bridge" type="robot_command.py" output="screen">
    <rosparam command="delete" param=""/>
    <param name="timezone" value="$(arg TIMEZONE)"/>
    <param name="mqtt/host" value="$(arg MQTT_HOST)"/>
    <param name="mqtt/port" value="$(arg MQTT_PORT)"/>
    <param name="mqtt/username" value="$(arg MQTT_USERNAME)"/>
    <param name="mqtt/password" value="$(arg MQTT_PASSWORD)"/>
    <param name="mqtt/use_ca" value="$(arg MQTT_USE_CA)"/>
    <param name="mqtt/cafile" value="$(find uoa_poc2_bridge)/certs/DST_Root_CA_X3.pem"/>
    <param name="roboticbase/entity_type" value="$(arg ENTITY_TYPE)"/>
    <param name="roboticbase/entity_id" value="$(arg ENTITY_ID2)"/>
    <param name="roboticbase/cmd_name" value="$(arg CMD_NAME)"/>
    <param name="ros/topic/cmd" value="/robot_bridge/$(arg ROBOT_NAME2)/cmd"/>
    <param name="ros/topic/cmdexe" value="/robot_bridge/$(arg ROBOT_NAME2)/cmdexe"/>
  </node>

  <node name="robot_emergency1" pkg="uoa_poc2_bridge" type="robot_emergency.py" output="screen">
    <rosparam command="delete" param=""/>
    <param name="timezone" value="$(arg TIMEZONE)"/>
    <param name="mqtt/host" value="$(arg MQTT_HOST)"/>
    <param name="mqtt/port" value="$(arg MQTT_PORT)"/>
    <param name="mqtt/username" value="$(arg MQTT_USERNAME)"/>
    <param name="mqtt/password" value="$(arg MQTT_PASSWORD)"/>
    <param name="mqtt/use_ca" value="$(arg MQTT_USE_CA)"/>
    <param name="mqtt/cafile" value="$(find uoa_poc2_bridge)/certs/DST_Root_CA_X3.pem"/>
    <param name="roboticbase/entity_type" value="$(arg ENTITY_TYPE)"/>
    <param name="roboticbase/entity_id" value="$(arg ENTITY_ID1)"/>
    <param name="roboticbase/emg_name" value="$(arg EMG_NAME)"/>
    <param name="ros/topic/emg" value="/robot_bridge/$(arg ROBOT_NAME1)/emg"/>
    <param name="ros/topic/emgexe" value="/robot_bridge/$(arg ROBOT_NAME1)/emgexe"/>
  </node>

  <node name="robot_emergency2" pkg="uoa_poc2_bridge" type="robot_emergency.py" output="screen">
    <rosparam command="delete" param=""/>
    <param name="timezone" value="$(arg TIMEZONE)"/>
    <param name="mqtt/host" value="$(arg MQTT_HOST)"/>
    <param name="mqtt/port" value="$(arg MQTT_PORT)"/>
    <param name="mqtt/username" value="$(arg MQTT_USERNAME)"/>
    <param name="mqtt/password" value="$(arg MQTT_PASSWORD)"/>
    <param name="mqtt/use_ca" value="$(arg MQTT_USE_CA)"/>
    <param name="mqtt/cafile" value="$(find uoa_poc2_bridge)/certs/DST_Root_CA_X3.pem"/>
    <param name="roboticbase/entity_type" value="$(arg ENTITY_TYPE)"/>
    <param name="roboticbase/entity_id" value="$(arg ENTITY_ID2)"/>
    <param name="roboticbase/emg_name" value="$(arg EMG_NAME)"/>
    <param name="ros/topic/emg" value="/robot_bridge/$(arg ROBOT_NAME2)/emg"/>
    <param name="ros/topic/emgexe" value="/robot_bridge/$(arg ROBOT_NAME2)/emgexe"/>
  </node>

  <node name="robot_state1" pkg="uoa_poc2_bridge" type="robot_state.py" output="screen">
    <rosparam command="delete" param=""/>
    <param name="timezone" value="$(arg TIMEZONE)"/>
    <param name="mqtt/host" value="$(arg MQTT_HOST)"/>
    <param name="mqtt/port" value="$(arg MQTT_PORT)"/>
    <param name="mqtt/username" value="$(arg MQTT_USERNAME)"/>
    <param name="mqtt/password" value="$(arg MQTT_PASSWORD)"/>
    <param name="mqtt/use_ca" value="$(arg MQTT_USE_CA)"/>
    <param name="mqtt/cafile" value="$(find uoa_poc2_bridge)/certs/DST_Root_CA_X3.pem"/>
    <param name="roboticbase/entity_type" value="$(arg ENTITY_TYPE)"/>
    <param name="roboticbase/entity_id" value="$(arg ENTITY_ID1)"/>
    <param name="ros/topic/state" value="/robot_bridge/$(arg ROBOT_NAME1)/state"/>
    <param name="thresholds/send_delta_millisec" value="$(arg SEND_DELTA_MILLISEC)"/>
  </node>

  <node name="robot_state2" pkg="uoa_poc2_bridge" type="robot_state.py" output="screen">
    <rosparam command="delete" param=""/>
    <param name="timezone" value="$(arg TIMEZONE)"/>
    <param name="mqtt/host" value="$(arg MQTT_HOST)"/>
    <param name="mqtt/port" value="$(arg MQTT_PORT)"/>
    <param name="mqtt/username" value="$(arg MQTT_USERNAME)"/>
    <param name="mqtt/password" value="$(arg MQTT_PASSWORD)"/>
    <param name="mqtt/use_ca" value="$(arg MQTT_USE_CA)"/>
    <param name="mqtt/cafile" value="$(find uoa_poc2_bridge)/certs/DST_Root_CA_X3.pem"/>
    <param name="roboticbase/entity_type" value="$(arg ENTITY_TYPE)"/>
    <param name="roboticbase/entity_id" value="$(arg ENTITY_ID2)"/>
    <param name="ros/topic/state" value="/robot_bridge/$(arg ROBOT_NAME2)/state"/>
    <param name="thresholds/send_delta_millisec" value="$(arg SEND_DELTA_MILLISEC)"/>
  </node>

</launch>
